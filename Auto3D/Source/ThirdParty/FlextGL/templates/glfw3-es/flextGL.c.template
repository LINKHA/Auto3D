@require(passthru, functions, enums, options, version, extensions)

#include "flextGL.h"
#include "GLFW/glfw3.h"

#include <stdio.h>


#ifdef __cplusplus
extern "C" {
#endif


void flextLoadOpenGLFunctions(void);

int flextInit(GLFWwindow* window)
{
    int major = glfwGetWindowAttrib(window, GLFW_CONTEXT_VERSION_MAJOR);
    int minor = glfwGetWindowAttrib(window, GLFW_CONTEXT_VERSION_MINOR);

    flextLoadOpenGLFunctions();

    /* --- Check for minimal version and profile --- */

    if (major * 10 + minor < @version.int_value()!s) {
        fprintf(stderr, "Error: OpenGL version @version.major!s.@version.minor!s not supported.\n");
        fprintf(stderr, "       Your version is %d.%d.\n", major, minor);
        fprintf(stderr, "       Try updating your graphics driver.\n");
        return GL_FALSE;
    }

    /* --- Check for extensions --- */

    @for extension,required in extensions:
    @if required:
    if (!glfwExtensionSupported("GL_@extension")) {
        fprintf(stderr, "Error: OpenGL extension @extension not supported.\n");
        fprintf(stderr, "       Try updating your graphics driver.\n");
        return GL_FALSE;
    }
    @else:
    if (glfwExtensionSupported("GL_@extension")) {
        FLEXT_@extension = GL_TRUE;
    }
    @end

    @end

    return GL_TRUE;
}



void flextLoadOpenGLFunctions(void)
{
    /* --- Function pointer loading --- */


    @for category,funcs in functions:
    @if category not in ['ES_VERSION_2_0', 'ES_VERSION_3_0']:
    /* GL_@category */

    @for f in funcs:
    glpf@f.name = (PFNGL@f.name.upper()_PROC*)glfwGetProcAddress("gl@f.name");
    @end


    @end
    @end
}

/* ----------------------- Extension flag definitions ---------------------- */
@for extension,required in extensions:
int FLEXT_@extension = GL_FALSE;
@end

/* ---------------------- Function pointer definitions --------------------- */

@for category,funcs in functions:
@if len(funcs) > 0 and category not in ['ES_VERSION_2_0', 'ES_VERSION_3_0' ]:
/* GL_@category */

@for f in funcs:
PFNGL@f.name.upper()_PROC* glpf@f.name = NULL;
@end

@end
@end


#ifdef __cplusplus
}
#endif
